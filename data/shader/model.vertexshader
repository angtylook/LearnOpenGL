#version 330 core

// vertex attribute input
layout(location = 0) in vec3 vertex;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 uv;

// flags
uniform int enable_light = 1;
uniform int enable_texture = 1;
uniform int enable_material = 1;

// Values that stay constant for the whole shader.
uniform mat4 project;
uniform mat4 view;
uniform mat4 model;

// output
out vec2 out_uv;
out vec3 out_normal;
out vec3 out_vertex;

void main(){

	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  project * view * model * vec4(vertex, 1.0);
	if(enable_texture == 1)
		out_uv = uv;
	if(enable_light == 1) {
		// normal need specual transform to preserve in world space
		out_normal = mat3(transpose(inverse(model))) * normal;
		out_vertex = vec3(model * vec4(vertex, 1.0));
	}
}

